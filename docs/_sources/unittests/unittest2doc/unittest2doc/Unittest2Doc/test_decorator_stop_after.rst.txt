.. _unittests/unittest2doc.unittest2doc.Unittest2Doc.test_decorator_stop_after:

unittest2doc.unittest2doc.Unittest2Doc.test_decorator_stop_after
========================================================================================

references: :class:`unittest2doc.unittest2doc.Unittest2Doc`


docstring of class
------------------

in this class, we test the decorator ``@Unittest2Doc.stop_after``



.. _unittests/unittest2doc.unittest2doc.Unittest2Doc.test_decorator_stop_after.setUp:

setUp
-----

.. collapse:: INPUT
  :open:

  .. code-block:: python

    def setUp(s):
      print("# this setup function is always called at beginning")
    


.. collapse:: OUTPUT
  :open:

  .. code-block:: 

    # this setup function is always called at beginning
  


.. _unittests/unittest2doc.unittest2doc.Unittest2Doc.test_decorator_stop_after.3:

3
-

this should be the executed when you use ``Unittest2Doc.generate_docs()``

.. collapse:: INPUT
  :open:

  .. code-block:: python

    def test_3(s):
      """ this should be the executed when you use ``Unittest2Doc.generate_docs()`` """
      pass
    


.. _unittests/unittest2doc.unittest2doc.Unittest2Doc.test_decorator_stop_after.2:

2
-

stop after this test when you use ``Unittest2Doc.generate_docs()``



.. collapse:: INPUT
  :open:

  .. code-block:: python

    @unittest2doc.stop_after
    def test_2(s):
      """ stop after this test when you use ``Unittest2Doc.generate_docs()``
    
      """
      pass
    


.. _unittests/unittest2doc.unittest2doc.Unittest2Doc.test_decorator_stop_after.tearDown:

tearDown
--------

.. collapse:: INPUT
  :open:

  .. code-block:: python

    def tearDown(s):
      print("# this tearDown function is always called at end")
    


.. collapse:: OUTPUT
  :open:

  .. code-block:: 

    # this tearDown function is always called at end
  

